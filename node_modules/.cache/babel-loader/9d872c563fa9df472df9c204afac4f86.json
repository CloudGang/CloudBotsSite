{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UNLIMITED\\\\Documents\\\\Lambda\\\\CloudBotsSite\\\\CloudBotsBiz\\\\src\\\\Components\\\\OrderForm.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FormGroup, Input, Button, Alert } from 'reactstrap';\nimport { BrowserHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport * as yup from 'yup';\nconst Form = styled.form`\n  max-width: 800px;\n  margin: 60px auto;\n  border: 2px solid black;\n  padding: 20px;\n`;\nconst Styledh3 = styled.h3`\n  text-align: center;\n`;\nconst StyledToppings = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  height: 400px;\n  align-content: space-between;\n  padding: 20px;\n`;\nconst StyledLabel = styled.label`\n  padding: 10px 0;\n`;\nconst StyledOrderFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport default function OrderForm({\n  order,\n  setOrder\n}) {\n  const initialState = {\n    customer: '',\n    size: '',\n    sauces: [{\n      name: 'Original Red',\n      id: 'original-red',\n      isChecked: false\n    }, {\n      name: 'Spinach Alfredo',\n      id: 'spinach-alfredo',\n      isChecked: false\n    }, {\n      name: 'Garlic Ranch',\n      id: 'garlic-ranch',\n      isChecked: false\n    }, {\n      name: 'BBQ Sauce',\n      id: 'bbq-sauce',\n      isChecked: false\n    }],\n    toppingsChecked: [{\n      name: 'Auto Click',\n      id: 'autoclick',\n      isChecked: false,\n      cypressTest: 'autoclickTest'\n    }, {\n      name: 'Auto Follow',\n      id: 'sausage',\n      isChecked: false,\n      cypressTest: 'sausageTest'\n    }, {\n      name: 'Auto UnFollow',\n      id: 'canadian-bacon',\n      isChecked: false\n    }, {\n      name: 'Auto Like',\n      id: 'spicy-italian-sausage',\n      isChecked: false\n    }, {\n      name: 'Auto Unlike',\n      id: 'grilled-chicken',\n      isChecked: false\n    }, {\n      name: 'Auto Post ',\n      id: 'onions',\n      isChecked: false\n    }, {\n      name: 'Auto ',\n      id: 'green-pepper',\n      isChecked: false\n    }, {\n      name: 'Auto ',\n      id: 'diced-tomatos',\n      isChecked: false\n    }, {\n      name: 'Auto ',\n      id: 'black-olives',\n      isChecked: false\n    }, {\n      name: 'Auto ',\n      id: 'roasted-garlic',\n      isChecked: false\n    }, {\n      name: 'Auto ',\n      id: 'artichoke-hearts',\n      isChecked: false\n    }, {\n      name: 'Auto ',\n      id: 'three-cheese',\n      isChecked: false\n    }, {\n      name: 'Auto ',\n      id: 'pineapple',\n      isChecked: false\n    }, {\n      name: 'Auto ',\n      id: 'extra-cheese',\n      isChecked: false\n    }],\n    instructions: '',\n    quantity: ''\n  };\n  const [formState, setFormState] = useState(initialState);\n  const [serverError, setServerError] = useState('');\n  const [formValid, setFormValid] = useState(false);\n  const [isButtonDisabled, setButtonDisabled] = useState(true);\n  const [errors, setErrors] = useState(initialState);\n  const formSchema = yup.object().shape({\n    customer: yup.string().min(3, \"Your name is required\").required(\"Your name is required\"),\n    size: yup.string().required(\"Please choose a Platform\"),\n    sauces: yup.array().of(yup.object().shape({\n      name: yup.string(),\n      id: yup.string(),\n      isChecked: yup.boolean()\n    })),\n    toppingsChecked: yup.array().of(yup.object().shape({\n      name: yup.string(),\n      id: yup.string(),\n      isChecked: yup.boolean()\n    })),\n    instructions: yup.string()\n  });\n\n  const validateChange = e => {\n    const name = e.target.name;\n    yup.reach(formSchema, e.target.name, e.target.type).validate(e.target.value).then(valid => {\n      setErrors({ ...errors,\n        [e.target.name]: \"\"\n      });\n    }).catch(err => {\n      console.log(\"OrderForm -> err\", err);\n      setErrors({ ...errors,\n        [name]: err.errors\n      });\n    });\n  };\n\n  useEffect(() => {\n    formSchema.isValid(formState).then(valid => {\n      setButtonDisabled(!valid);\n      setFormValid(valid);\n      console.log(\"OrderForm -> valid\", valid);\n    });\n  }, [formState]);\n\n  const handleChange = e => {\n    e.persist();\n    let newFormState;\n\n    if (e.target.type === 'checkbox') {\n      newFormState = { ...formState,\n        toppingsChecked: formState.toppingsChecked.map(item => {\n          return item.id === e.target.id ? { ...item,\n            isChecked: !item.isChecked\n          } : { ...item\n          };\n        })\n      };\n    } else {\n      newFormState = { ...formState,\n        [e.target.name]: e.target.value\n      };\n    }\n\n    validateChange(e);\n    setFormState(newFormState);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post('https://reqres.in/api/users', formState).then(res => {\n      console.log(res.data);\n      const data = { ...res.data,\n        sauces: res.data.sauces.filter(sauce => sauce.isChecked === true),\n        toppingsChecked: res.data.toppingsChecked.filter(toppings => toppings.isChecked === true)\n      };\n      setOrder([...order, data]);\n      setFormState(initialState);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    style: {\n      padding: '40px'\n    },\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Styledh3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, \"Build Your Own Bot\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, \"Your Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Your Name\",\n    value: formState.customer,\n    onChange: e => handleChange(e),\n    name: \"customer\",\n    \"data-cy\": \"customer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }), errors.customer ? /*#__PURE__*/React.createElement(Alert, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, errors.customer) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, \"Select Platform\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    onChange: e => handleChange(e),\n    value: formState.size,\n    name: \"size\",\n    \"data-cy\": \"size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Select Platform\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, \"Facebook\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Instagram\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"Instagram\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, \"Other\")), errors.size ? /*#__PURE__*/React.createElement(Alert, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, errors.size) : null), /*#__PURE__*/React.createElement(FormGroup, {\n    check: true,\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"Choose Functions\"), /*#__PURE__*/React.createElement(StyledToppings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, formState.toppingsChecked.map(toppings => {\n    return /*#__PURE__*/React.createElement(StyledLabel, {\n      htmlFor: toppings.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"checkbox\",\n      checked: toppings.isChecked,\n      name: \"toppingsChecked\",\n      id: toppings.id,\n      \"data-cy\": toppings.cypressTest,\n      onChange: e => handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }), toppings.name);\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"instructions\",\n    value: formState.instructions,\n    onChange: e => handleChange(e),\n    placeholder: \"Anything else you'd like to add?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    \"data-cy\": \"submit\",\n    disabled: isButtonDisabled,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, \"Place your order!\"));\n}","map":{"version":3,"sources":["C:/Users/UNLIMITED/Documents/Lambda/CloudBotsSite/CloudBotsBiz/src/Components/OrderForm.jsx"],"names":["React","useState","useEffect","axios","FormGroup","Input","Button","Alert","BrowserHistory","styled","yup","Form","form","Styledh3","h3","StyledToppings","div","StyledLabel","label","StyledOrderFooter","OrderForm","order","setOrder","initialState","customer","size","sauces","name","id","isChecked","toppingsChecked","cypressTest","instructions","quantity","formState","setFormState","serverError","setServerError","formValid","setFormValid","isButtonDisabled","setButtonDisabled","errors","setErrors","formSchema","object","shape","string","min","required","array","of","boolean","validateChange","e","target","reach","type","validate","value","then","valid","catch","err","console","log","isValid","handleChange","persist","newFormState","map","item","handleSubmit","preventDefault","post","res","data","filter","sauce","toppings","padding","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { FormGroup, Input, Button, Alert } from 'reactstrap'\nimport { BrowserHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport * as yup from 'yup'\n\nconst Form = styled.form`\n  max-width: 800px;\n  margin: 60px auto;\n  border: 2px solid black;\n  padding: 20px;\n`\nconst Styledh3 = styled.h3`\n  text-align: center;\n`\nconst StyledToppings = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  height: 400px;\n  align-content: space-between;\n  padding: 20px;\n`\nconst StyledLabel = styled.label`\n  padding: 10px 0;\n`\nconst StyledOrderFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\nexport default function OrderForm({ order, setOrder }) {\n\n  const initialState = {\n    customer: '',\n    size: '',\n    sauces: [\n      { name: 'Original Red', id: 'original-red', isChecked: false },\n      { name: 'Spinach Alfredo', id: 'spinach-alfredo', isChecked: false },\n      { name: 'Garlic Ranch', id: 'garlic-ranch', isChecked: false },\n      { name: 'BBQ Sauce', id: 'bbq-sauce', isChecked: false }\n    ],\n    toppingsChecked: [\n      { name: 'Auto Click', id: 'autoclick', isChecked: false, cypressTest: 'autoclickTest' },\n      { name: 'Auto Follow', id: 'sausage', isChecked: false, cypressTest: 'sausageTest' },\n      { name: 'Auto UnFollow', id: 'canadian-bacon', isChecked: false },\n      { name: 'Auto Like', id: 'spicy-italian-sausage', isChecked: false },\n      { name: 'Auto Unlike', id: 'grilled-chicken', isChecked: false },\n      { name: 'Auto Post ', id: 'onions', isChecked: false },\n      { name: 'Auto ', id: 'green-pepper', isChecked: false },\n      { name: 'Auto ', id: 'diced-tomatos', isChecked: false },\n      { name: 'Auto ', id: 'black-olives', isChecked: false },\n      { name: 'Auto ', id: 'roasted-garlic', isChecked: false },\n      { name: 'Auto ', id: 'artichoke-hearts', isChecked: false },\n      { name: 'Auto ', id: 'three-cheese', isChecked: false },\n      { name: 'Auto ', id: 'pineapple', isChecked: false },\n      { name: 'Auto ', id: 'extra-cheese', isChecked: false },\n    ],\n    instructions: '',\n    quantity: ''\n  }\n\n  const [formState, setFormState] = useState(initialState);\n  const [serverError, setServerError] = useState('')\n  const [formValid, setFormValid] = useState(false)\n  const [isButtonDisabled, setButtonDisabled] = useState(true)\n  const [errors, setErrors] = useState(initialState)\n\n  const formSchema = yup.object().shape({\n    customer: yup.string().min(3, \"Your name is required\").required(\"Your name is required\"),\n    size: yup.string().required(\"Please choose a Platform\"),\n    sauces: yup.array()\n      .of(yup.object().shape({\n        name: yup.string(),\n        id: yup.string(),\n        isChecked: yup.boolean()\n      })),\n    toppingsChecked: yup.array()\n      .of(yup.object().shape({\n        name: yup.string(),\n        id: yup.string(),\n        isChecked: yup.boolean()\n      })),\n    instructions: yup.string()\n  })\n\n  const validateChange = e => {\n    const name = e.target.name;\n    yup\n      .reach(formSchema, e.target.name, e.target.type)\n      .validate(e.target.value)\n      .then(valid => {\n        setErrors({ ...errors, [e.target.name]: \"\" })\n      })\n      .catch(err => {\n        console.log(\"OrderForm -> err\", err)\n        setErrors({ ...errors, [name]: err.errors })\n      })\n  }\n\n  useEffect(() => {\n    formSchema.isValid(formState).then(valid => {\n      setButtonDisabled(!valid)\n      setFormValid(valid)\n      console.log(\"OrderForm -> valid\", valid)\n    })\n  }, [formState])\n\n  const handleChange = e => {\n    e.persist();\n    let newFormState;\n    if (e.target.type === 'checkbox') {\n      newFormState = {\n        ...formState,\n        toppingsChecked: formState.toppingsChecked.map(item => {\n          return (\n            item.id === e.target.id ? {\n              ...item, isChecked: !item.isChecked\n            } : { ...item }\n          )\n        })\n      }\n    } else {\n      newFormState = {\n        ...formState, [e.target.name]: e.target.value\n      }\n    }\n    validateChange(e)\n    setFormState(newFormState)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post('https://reqres.in/api/users', formState)\n      .then(res => {\n        console.log(res.data)\n        const data = {\n          ...res.data,\n          sauces: res.data.sauces.filter(sauce => sauce.isChecked === true),\n          toppingsChecked: res.data.toppingsChecked.filter(toppings => toppings.isChecked === true),\n        }\n        setOrder([...order, data])\n        setFormState(initialState)\n      }\n      )\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <Form style={{ padding: '40px' }} onSubmit={e => handleSubmit(e)}>\n      <Styledh3>Build Your Own Bot</Styledh3>\n      <FormGroup>\n        <legend>Your Name</legend>\n        <Input type=\"text\" placeholder=\"Your Name\" value={formState.customer} onChange={e => handleChange(e)} name=\"customer\" data-cy=\"customer\" />\n        {errors.customer ? (<Alert color=\"warning\">{errors.customer}</Alert>) : null}\n      </FormGroup>\n\n      <FormGroup>\n        <legend>Select Platform</legend>\n        <Input type=\"select\" onChange={e => handleChange(e)} value={formState.size} name=\"size\" data-cy=\"size\">\n          <option value=\"\">Select Platform</option>\n          <option value=\"Facebook\">Facebook</option>\n          <option value=\"Instagram\">Instagram</option>\n          <option value=\"Other\">Other</option>\n        </Input>\n        {errors.size ? (<Alert color=\"warning\">{errors.size}</Alert>) : null}\n      </FormGroup>\n\n\n      <FormGroup check style={{ display: 'flex', flexDirection: 'column' }}>\n        <legend>Choose Functions</legend>\n        <StyledToppings>\n          {formState.toppingsChecked.map(toppings => {\n            return (\n              <StyledLabel htmlFor={toppings.id}>\n                <Input\n                  type=\"checkbox\"\n                  checked={toppings.isChecked} name=\"toppingsChecked\"\n                  id={toppings.id}\n                  data-cy={toppings.cypressTest}\n                  onChange={e => handleChange(e)}\n                />\n                {toppings.name}\n              </StyledLabel>\n            )\n          })}\n        </StyledToppings>\n      </FormGroup>\n\n      <FormGroup>\n        <legend>Instructions</legend>\n        <Input type=\"text\" name=\"instructions\" value={formState.instructions} onChange={e => handleChange(e)} placeholder=\"Anything else you'd like to add?\" />\n      </FormGroup>\n\n      <Button type=\"submit\" data-cy=\"submit\" disabled={isButtonDisabled} color=\"primary\">Place your order!</Button>\n    </Form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}